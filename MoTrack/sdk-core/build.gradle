plugins {
    id 'com.android.library'
    id 'kotlin-android'
}

android {
    compileSdk rootProject.ext.coreCompileSdkVersion
//    compileSdkVersion coreCompileSdkVersion

    defaultConfig {
        configurations.all {
            resolutionStrategy { force "androidx.core:core-ktx:$rootProject.coreKtxVersion" }
        }
        minSdk rootProject.ext.coreMinSdkVersion
        targetSdk rootProject.ext.coreTargetSdkVersion
        consumerProguardFiles 'motrack-proguard-rules.txt'

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    lint {
        // If set to true (default), stops the build if errors are found.
        abortOnError false
        // If true, only report errors.
        ignoreWarnings true
    }

}

dependencies {

    implementation "androidx.core:core-ktx:$rootProject.coreKtxVersion"
    implementation "androidx.appcompat:appcompat:$rootProject.appCompatVersion"

    // Testing
    testImplementation "junit:junit:$rootProject.JunitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"
    implementation 'com.google.code.gson:gson:2.9.0'
}


// delete jar file library in libs folder
// motrack sdk core
task deleteJar(type: Delete) {
    delete 'libs/mylibrary.jar'
}


// generate jar library
// motrack sdk core
task exportjar(type: Copy) {
    from('build/intermediates/compile_library_classes/release/')
    into('libs/')
    include('classes.jar')
    rename('classes.jar', 'MoTrack-sdk-preAlfa-0.1.jar')

}

exportjar.dependsOn(deleteJar, build)

